buildscript {
    ext {
        kotlin_version = '1.4.10'
        atomicfu_version = '0.14.1'
        bintray_version = '1.8.1'
    }

    repositories {
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }

    dependencies {
        classpath "org.jetbrains.kotlinx:atomicfu-gradle-plugin:$atomicfu_version"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-serialization:$kotlin_version"
        classpath "com.jfrog.bintray.gradle:gradle-bintray-plugin:$bintray_version"
        classpath "com.github.jengelman.gradle.plugins:shadow:5.1.0"
    }
}

plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.4.10'
    id 'org.jetbrains.kotlin.kapt' version '1.4.10'
}

repositories {
    mavenCentral()
    jcenter()
}

ext {
    lib_version = System.getenv("CI_COMMIT_TAG") ?: System.getenv("CI_COMMIT_SHA") ?: "undefined"
    lib_group = 'com.gitlab.kordlib.cache'
    kotlin_logging_version = '1.7.8'
    coroutines_version = '1.3.2'
    caffeine_version = '2.7.0'
    lettuce_version = '5.2.1.RELEASE'
    serialization_version = '0.14.0'
}

group lib_group
version lib_version ?: "undefined"

subprojects {
    group 'com.gitlab.kordlib.cache'
    version '0.0.1'

    apply plugin: 'java'
    apply plugin: 'kotlin'
    apply plugin: 'kotlinx-atomicfu'
    apply plugin: 'kotlinx-serialization'
    apply plugin: 'com.jfrog.bintray'
    apply plugin: 'maven-publish'
    apply plugin: 'com.github.johnrengelman.shadow'

    repositories {
        mavenCentral()
        jcenter()
        maven { url "https://kotlin.bintray.com/kotlinx" }
        maven { url 'https://jitpack.io' }
    }

    dependencies {
        implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
        implementation "io.github.microutils:kotlin-logging:$kotlin_logging_version"

        testImplementation 'org.junit.jupiter:junit-jupiter-api:5.5.1'
        testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.5.1'
    }

    test {
        useJUnitPlatform()
    }

    compileKotlin {
        kotlinOptions.jvmTarget = "1.8"
    }
    compileTestKotlin {
        kotlinOptions.jvmTarget = "1.8"
    }

    task sourcesJar(type: Jar) {
        archiveClassifier.set 'sources'
        from sourceSets.main.allSource
    }

    archivesBaseName = project.name

    publishing {
        publications {
            Cache(MavenPublication) {
                from components.kotlin
                groupId lib_group
                artifactId archivesBaseName
                version lib_version

                artifact sourcesJar
                pom.withXml {
                    def root = asNode()

                    root.dependencies.removeAll { dep ->
                        dep.scope == "test"
                    }
                }
            }
        }
    }

    bintray {
        user = System.getenv('BINTRAY_USER')
        key = System.getenv('BINTRAY_KEY')
        publications = ['Cache']
        publish = true
        pkg {
            repo = 'Kord'
            name = 'Cache'
            userOrg = 'kordlib'
            licenses = ['MIT']
            vcsUrl = 'https://gitlab.com/kordlib/cache.git'
            websiteUrl = 'https://gitlab.com/kordlib/cache'
            issueTrackerUrl = 'https://gitlab.com/kordlib/cache/issues'

            version {
                name = lib_version
                desc = "Adaptable cache with query-like operations"
                released = new Date()
                vcsTag = lib_version
            }
        }
    }
}
